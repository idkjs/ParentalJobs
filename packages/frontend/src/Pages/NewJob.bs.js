// Generated by BUCKLESCRIPT VERSION 5.0.6, PLEASE EDIT WITH CARE

import * as Cn from "re-classnames/src/Cn.bs.js";
import * as Block from "bs-platform/lib/es6/block.js";
import * as Curry from "bs-platform/lib/es6/curry.js";
import * as React from "react";
import * as Formality__Form from "re-formality/src/Formality__Form.bs.js";
import * as Prelude$Frontend from "../helpers/Prelude.bs.js";
import * as Jobs_Css$Frontend from "./Jobs_Css.bs.js";
import * as Formality__PublicHelpers from "re-formality/src/Formality__PublicHelpers.bs.js";

function update(state, value) {
  return /* record */[
          /* email */value,
          /* password */state[/* password */1]
        ];
}

function validator_003(param) {
  if (param[/* email */0] === "") {
    return /* Error */Block.__(1, ["Uh oh error"]);
  } else {
    return /* Ok */Block.__(0, [/* Valid */0]);
  }
}

var validator = /* record */[
  /* field : Email */0,
  /* strategy : OnFirstSuccessOrFirstBlur */3,
  /* dependents */undefined,
  validator_003
];

var EmailField = /* module */[
  /* update */update,
  /* validator */validator
];

function update$1(state, value) {
  return /* record */[
          /* email */state[/* email */0],
          /* password */value
        ];
}

function validator_003$1(param) {
  if (param[/* password */1] === "") {
    return /* Error */Block.__(1, ["Uh oh error"]);
  } else {
    return /* Ok */Block.__(0, [/* Valid */0]);
  }
}

var validator$1 = /* record */[
  /* field : Password */1,
  /* strategy : OnFirstBlur */0,
  /* dependents */undefined,
  validator_003$1
];

var PasswordField = /* module */[
  /* update */update$1,
  /* validator */validator$1
];

var validators_001 = /* :: */[
  validator$1,
  /* [] */0
];

var validators = /* :: */[
  validator,
  validators_001
];

var LoginForm = /* module */[
  /* EmailField */EmailField,
  /* PasswordField */PasswordField,
  /* validators */validators
];

var LoginFormHook = Formality__Form.Make([validators]);

function NewJob(Props) {
  var form = Curry._2(LoginFormHook[/* useForm */2], /* record */[
        /* email */"",
        /* password */""
      ], (function (state, form) {
          console.log("Submitted with:", state);
          setTimeout((function (param) {
                  Curry._1(form[/* notifyOnSuccess */0], undefined);
                  setTimeout(form[/* reset */2], 3000);
                  return /* () */0;
                }), 500);
          return /* () */0;
        }));
  var partial_arg = form[/* submit */8];
  var partial_arg$1 = Formality__PublicHelpers.Dom[/* preventDefault */0];
  var match = Curry._1(form[/* result */2], /* Email */0);
  var tmp;
  if (match !== undefined) {
    var match$1 = match;
    tmp = match$1.tag ? React.createElement("div", {
            className: Cn.make(/* :: */[
                  "form-message",
                  /* :: */[
                    "failure",
                    /* [] */0
                  ]
                ])
          }, match$1[0]) : null;
  } else {
    tmp = null;
  }
  var match$2 = Curry._1(form[/* result */2], /* Password */1);
  var tmp$1;
  if (match$2 !== undefined) {
    var match$3 = match$2;
    tmp$1 = match$3.tag ? React.createElement("div", {
            className: Cn.make(/* :: */[
                  "form-message",
                  /* :: */[
                    "failure",
                    /* [] */0
                  ]
                ])
          }, match$3[0]) : null;
  } else {
    tmp$1 = null;
  }
  var match$4 = form[/* submitting */5];
  return React.createElement("div", {
              className: "container"
            }, React.createElement("div", {
                  className: "page-header"
                }, React.createElement("div", {
                      className: Cn.make(/* :: */[
                            "container",
                            /* :: */[
                              Jobs_Css$Frontend.jobsList,
                              /* [] */0
                            ]
                          ])
                    }, React.createElement("h1", {
                          className: "page-title"
                        }, Prelude$Frontend.s("Find a Jobs")), React.createElement("form", {
                          onSubmit: (function (param) {
                              return partial_arg$1(partial_arg, param);
                            })
                        }, React.createElement("input", {
                              disabled: form[/* submitting */5],
                              value: form[/* state */0][/* email */0],
                              onBlur: (function (param) {
                                  return Curry._1(form[/* blur */7], /* Email */0);
                                }),
                              onChange: (function ($$event) {
                                  return Curry._2(form[/* change */6], /* Email */0, update(form[/* state */0], $$event.target.value));
                                })
                            }), tmp, React.createElement("input", {
                              disabled: form[/* submitting */5],
                              value: form[/* state */0][/* password */1],
                              onBlur: (function (param) {
                                  return Curry._1(form[/* blur */7], /* Password */1);
                                }),
                              onChange: (function ($$event) {
                                  return Curry._2(form[/* change */6], /* Password */1, update$1(form[/* state */0], $$event.target.value));
                                })
                            }), tmp$1, React.createElement("button", {
                              disabled: form[/* submitting */5]
                            }, match$4 ? "Submitting..." : "Submit")))));
}

var Css = 0;

var make = NewJob;

export {
  Css ,
  LoginForm ,
  LoginFormHook ,
  make ,
  
}
/* LoginFormHook Not a pure module */
